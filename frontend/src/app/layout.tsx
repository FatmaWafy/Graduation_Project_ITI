// import type { Metadata } from "next";
// import { Geist, Geist_Mono } from "next/font/google";
// import "@/styles/globals.css";
// import { AuthProvider } from "@/src/lib/auth-context";
// import { NotificationsProvider } from "@/src/lib/notifications-context"; // ✅ استدعاء مزود الإشعارات

// const geistSans = Geist({
//   variable: "--font-geist-sans",
//   subsets: ["latin"],
// });

// const geistMono = Geist_Mono({
//   variable: "--font-geist-mono",
//   subsets: ["latin"],
// });

// export const metadata: Metadata = {
//   title: "Create Next App",
//   description: "Generated by create next app",
// };

// export default function RootLayout({
//   children,
// }: Readonly<{ children: React.ReactNode }>) {
//   return (
//     <html lang="en">
//       <body className={`${geistSans.variable} ${geistMono.variable} antialiased`}>
//         <AuthProvider>
//           <NotificationsProvider> {/* ✅ لف التطبيق بمزود الإشعارات */}
//             {children}
//           </NotificationsProvider>
//         </AuthProvider>
//       </body>
//     </html>
//   );
// }

import type { Metadata } from "next"
import type React from "react"
import { Geist, Geist_Mono } from "next/font/google"
import { Providers } from "./providers"
import { Toaster } from "@/src/components/ui/toaster"
import { AuthProvider } from "@/src/lib/auth-context"
import { NotificationsProvider } from "@/src/lib/notifications-context"
import "@/styles/globals.css"

const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
})

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
})

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
}

export default function RootLayout({ children }: Readonly<{ children: React.ReactNode }>) {
  return (
    <html lang="en">
      <body className={`${geistSans.variable} ${geistMono.variable} antialiased`}>
        {/* Wrap with Providers for React Query */}
        <Providers>
          {/* Keep the existing AuthProvider */}
          <AuthProvider>
            {/* Keep the existing NotificationsProvider */}
            <NotificationsProvider>
              {children}
              {/* Add the Toaster component for notifications */}
              <Toaster />
            </NotificationsProvider>
          </AuthProvider>
        </Providers>
      </body>
    </html>
  )
}

